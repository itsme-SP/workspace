/*
 * SPI_Tx_Only_Esp32.c
 *
 *  Created on: Aug 31, 2025
 *      Author: Shivaprasad
 */
#include <stdio.h>
#include <string.h>
#include "stm32f401xx.h"
#include "stm32f_gpio_driver.h"
#include "stm32f_spi_driver.h"

void delay(){
	for(int i=0;i<5000;i++);
}


void GPIO_Config(){
	GPIO_HANDLE_t GPIOB_Handle;
	GPIOB_Handle.pGPIOx=GPIOB;
	GPIOB_Handle.GPIO_PINCONFIG.GPIO_OUTPUT_TYPE=GPIO_OP_TYPE_PP;
	GPIOB_Handle.GPIO_PINCONFIG.GPIO_PIN_MODE=GPIO_MODE_ALTFN;
	GPIOB_Handle.GPIO_PINCONFIG.GPIO_PIN_SPEED=GPIO_OP_HSP;
	GPIOB_Handle.GPIO_PINCONFIG.GPIO_PIN_ALT_FUNC_MODE=5;
	GPIOB_Handle.GPIO_PINCONFIG.GPIO_PULLUP_PULLDOWN=GPIO_PIN_NO_PUPD;

	//SCLK pin number initialize
	GPIOB_Handle.GPIO_PINCONFIG.GPIO_PIN_NUMBER=GPIO_PIN_NO_13;
	GPIO_Init(&GPIOB_Handle);

	//NSS pin initialize
	GPIOB_Handle.GPIO_PINCONFIG.GPIO_PIN_NUMBER=GPIO_PIN_NO_9;
	GPIO_Init(&GPIOB_Handle);


	//MOSI pin initialize
	GPIOB_Handle.GPIO_PINCONFIG.GPIO_PIN_NUMBER=GPIO_PIN_NO_15;
	GPIO_Init(&GPIOB_Handle);

	//we did not use MISO line because we are only transmitting no reception from the other side

}

void SPI_Config(){
	SPI_HANDLE_t SPI_Cnfg;
	SPI_Cnfg.pSPIx=SPI2;
	SPI_Cnfg.spi_config.SPI_dev_md=SPI_DEV_MASTER;
	SPI_Cnfg.spi_config.SPI_bus_cnfg=SPI_BUS_CONFIG_FD;
	SPI_Cnfg.spi_config.SPI_dff=SPI_DFF_8BITS;
	SPI_Cnfg.spi_config.SPI_CPHA=SPI_CPHA_LOW;
	SPI_Cnfg.spi_config.SPI_CPOL=SPI_CPOL_LOW;
	SPI_Cnfg.spi_config.SPI_speed=SPI_SCLK_DIV8;// the clock speed is reduced to 2Mhz
	SPI_Cnfg.spi_config.SPI_ssm=SPI_SSM_DI;//hardware slave select will be used instead of software

	SPI_Init(&SPI_Cnfg);
}

void Button_init(){
	GPIO_HANDLE_t GPIO_BUTTON;
	    GPIO_BUTTON.pGPIOx=GPIOC;
		GPIO_BUTTON.GPIO_PINCONFIG.GPIO_PIN_NUMBER=GPIO_PIN_NO_13;
		GPIO_BUTTON.GPIO_PINCONFIG.GPIO_PIN_MODE=GPIO_MODE_IN;
		GPIO_BUTTON.GPIO_PINCONFIG.GPIO_PIN_SPEED=GPIO_OP_VHSP;
		GPIO_BUTTON.GPIO_PINCONFIG.GPIO_PIN_SPEED=GPIO_PIN_NO_PUPD;
		GPIO_Init(&GPIO_BUTTON);

}


int main(void){
	char data[]="Hello World";
	GPIO_Config();
	SPI_Config();
	SPI_SSOEConfig(SPI2, ENABLE);
	while(1){
		//when the button is pressed only then the spi will transmit the data
		while(!(GPIO_ReadFromInputPin(GPIOC, GPIO_PIN_NO_13))){
			delay();
		Button_init();

		/*
		 * we don't need SSI because we are not using software slave select management
		 */
		//SPI_SSIConfig(SPI2, DISABLE);

		SPI_SendData(SPI2,(uint8_t*)data, strlen(data));
		SPI_DeInit(SPI2);
		}
	}
	return 0;
}
